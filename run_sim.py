#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
run_sim.py: Top-level Run simulation.
"""
__author__      = ['Kuan-yin Chen', 'Kejiao Sui', 'Wei Lin']
__copyright__   = 'Copyright 2014, NYU-Poly'




# Built-in modules
import os
import sys
import imp

# ---- Copy config file to sim/SimConfig.py as specified ----
if (len(sys.argv) > 1):
    abs_path = os.path.abspath(sys.argv[1])
    cfg = imp.load_source('SimConfig', abs_path)    
    print "Reading config from: %s" %(abs_path)
else:
    abs_path = os.path.abspath('./cfgs/default.txt')
    cfg = imp.load_source('SimConfig', abs_path)
    print "Reading config from: ./cfgs/default.txt"

# Third-party modules
# User-defined modules
from sim.SimCore import *
import SimConfig as cfg


if __name__ == '__main__':
    mySim = SimCore()
    if (cfg.DO_PROFILING == True):
        fn_profile = os.path.join(cfg.LOG_DIR, 'profile_pstats.pstats')
        import cProfile
        print "Code performance profiling output to", fn_profile
        cProfile.run('mySim.main_course()', fn_profile)
    else:
        mySim.main_course()

    if (cfg.LOG_CONFIG > 0):
        os.system("cp %s %s" %(abs_path, mySim.fn_config))
    os.system("rm %s" %(abs_path + 'c'))    # Remove temp file generated by imp